{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CohortSearchPipe = /*#__PURE__*/(() => {\n  class CohortSearchPipe {\n    transform(cohorts, criteria = '') {\n      if (criteria == '') {\n        return cohorts;\n      }\n\n      let selCohorts = [];\n      cohorts.forEach(cohort => {\n        if (cohort.id.toString().toLowerCase().includes(criteria.toLowerCase()) || cohort.name.toLowerCase().includes(criteria.toLowerCase()) || cohort.instructorId != null && cohort.instructorId.toString().toLowerCase().includes(criteria.toLowerCase()) || cohort.beginDate != null && cohort.beginDate.toString().toLowerCase().includes(criteria.toLowerCase()) || cohort.endDate != null && cohort.endDate.toLowerCase().includes(criteria.toLowerCase()) || cohort.demoDay != null && cohort.demoDay.toLowerCase().includes(criteria.toLowerCase()) || cohort.capacity.toString().toLowerCase().includes(criteria.toLowerCase()) || cohort.active.toString().toLowerCase().includes(criteria.toLowerCase())) {\n          selCohorts.push(cohort);\n        }\n      });\n      return selCohorts;\n    }\n\n  }\n\n  CohortSearchPipe.ɵfac = function CohortSearchPipe_Factory(t) {\n    return new (t || CohortSearchPipe)();\n  };\n\n  CohortSearchPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"cohortSrch\",\n    type: CohortSearchPipe,\n    pure: true\n  });\n  return CohortSearchPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}