{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/system/system.service\";\nimport * as i2 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(sys, http) {\n      this.sys = sys;\n      this.http = http;\n    }\n\n    getActiveCohortByUserId(userId) {\n      return this.http.get(`${this.sys.url}/users/getcohort/${userId}`);\n    }\n\n    login(username, password) {\n      return this.http.get(`${this.sys.url}/login/${username}/${password}`);\n    }\n\n    list() {\n      return this.http.get(`${this.sys.url}/users`);\n    }\n\n    getInstructors() {\n      return this.http.get(`${this.sys.url}/users/instructors`);\n    }\n\n    get(id) {\n      return this.http.get(`${this.sys.url}/users/${id}`);\n    }\n\n    create(user) {\n      return this.http.post(`${this.sys.url}/users`, user);\n    }\n\n    change(user) {\n      return this.http.post(`${this.sys.url}/users/update/${user.id}`, user);\n    }\n\n    change2(user) {\n      return this.http.put(`${this.sys.url}/users/${user.id}`, user);\n    }\n\n    remove(user) {\n      return this.http.post(`${this.sys.url}/users/delete/${user.id}`, null);\n    }\n\n    remove2(user) {\n      return this.http.delete(`${this.sys.url}/users/${user.id}`);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.SystemService), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}