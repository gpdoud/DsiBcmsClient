{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app-init.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../logger/logger.service\";\nimport * as i4 from \"@core/ip/ip.service\";\nexport let SystemService = /*#__PURE__*/(() => {\n  class SystemService {\n    constructor(init, router, logger, ipsvc) {\n      this.init = init;\n      this.router = router;\n      this.logger = logger;\n      this.ipsvc = ipsvc;\n      this.config = null;\n      this._loggedInUser = null;\n      this.config = init.config;\n      this.logger.setSeverity(this.config.logSeverity);\n      this.log.debug(\"System config:\", this.config);\n    }\n\n    get url() {\n      return this.config.baseurl;\n    }\n\n    get log() {\n      return this.logger;\n    }\n\n    setLoggedInUser(user) {\n      this._loggedInUser = user;\n    }\n\n    clearLoggedInUser() {\n      this._loggedInUser = null;\n    }\n\n    isUserLoggedIn() {\n      return this._loggedInUser != null;\n    }\n\n    get loggedInUser() {\n      return this._loggedInUser;\n    }\n\n    checkLogin() {\n      if (!this.isUserLoggedIn()) {\n        this.router.navigateByUrl(\"/login\");\n      }\n    }\n\n    get userIsRoot() {\n      return this.isUserLoggedIn && this.loggedInUser.role != null && this.loggedInUser.role.isRoot;\n    }\n\n    get userIsAdmin() {\n      return this.isUserLoggedIn && this.loggedInUser.role != null && this.loggedInUser.role.isAdmin;\n    }\n\n    get userIsInstructor() {\n      return this.isUserLoggedIn && this.loggedInUser.role != null && this.loggedInUser.role.isInstructor;\n    }\n\n    get userIsRootOrAdmin() {\n      return this.userIsRoot || this.userIsAdmin;\n    }\n\n    get userIsRootAdminOrInstructor() {\n      return this.userIsRoot || this.userIsAdmin || this.userIsInstructor;\n    }\n\n  }\n\n  SystemService.ɵfac = function SystemService_Factory(t) {\n    return new (t || SystemService)(i0.ɵɵinject(i1.AppInitService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.LoggerService), i0.ɵɵinject(i4.IpService));\n  };\n\n  SystemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SystemService,\n    factory: SystemService.ɵfac,\n    providedIn: 'root'\n  });\n  return SystemService;\n})();","map":null,"metadata":{},"sourceType":"module"}